
package Paquetes;

import BD.conexion;
import Datos.datosPacientes;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableCellRenderer;

/**
 *
 * @author Quiej
 */
public class verPacientes extends javax.swing.JFrame {

    List<datosPacientes> ListResgistros;
    datosPacientes datosPacientes;
    
    public double dpi;
    public String nombre;
    public String apellidos;
    public String fechaN;
    public String edad;
    public String genero;
    public String direccion;  

    public double getDpi() {
        return dpi;
    }

    public void setDpi(double dpi) {
        this.dpi = dpi;
    }

   
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getApellidos() {
        return apellidos;
    }

    public void setApellidos(String apellidos) {
        this.apellidos = apellidos;
    }

    public String getFechaN() {
        return fechaN;
    }

    public void setFechaN(String fechaN) {
        this.fechaN = fechaN;
    }

    public String getEdad() {
        return edad;
    }

    public void setEdad(String edad) {
        this.edad = edad;
    }

    public String getGenero() {
        return genero;
    }

    public void setGenero(String genero) {
        this.genero = genero;
    }

    public String getDireccion() {
        return direccion;
    }

    public void setDireccion(String direccion) {
        this.direccion = direccion;
    }
    
    
    public verPacientes() {
        initComponents();
        ListResgistros = new ArrayList<>();
        datosPacientes = new datosPacientes();
        AcTab();
        DatosTabla();
        Tdpi.setEnabled(false);
        Tnombre.setEnabled(false);
        Tapellidos.setEnabled(false);
        Tnacimiento.setEnabled(false);
        Tedad.setEnabled(false);
        Tgenero.setEnabled(false);
        Tdireccion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TabPacientes = new javax.swing.JTable();
        Tnombre = new javax.swing.JTextField();
        Tdpi = new javax.swing.JTextField();
        Tedad = new javax.swing.JTextField();
        Tnacimiento = new javax.swing.JTextField();
        Tdireccion = new javax.swing.JTextField();
        Tapellidos = new javax.swing.JTextField();
        Tgenero = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        CAMBIOS = new javax.swing.JButton();
        AGREGAR = new javax.swing.JButton();
        EDITAR2 = new javax.swing.JButton();
        BORRAR1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setText("LISTADO DE PACIENTES");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(249, 249, 249)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, -1));

        TabPacientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TabPacientes);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, 780, 160));
        getContentPane().add(Tnombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 370, 230, 30));
        getContentPane().add(Tdpi, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 330, 230, 30));
        getContentPane().add(Tedad, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 330, 230, 30));
        getContentPane().add(Tnacimiento, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 450, 230, 30));
        getContentPane().add(Tdireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 410, 230, 30));
        getContentPane().add(Tapellidos, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 410, 230, 30));
        getContentPane().add(Tgenero, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 370, 230, 30));

        jLabel2.setText("NOMBRE:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 380, -1, -1));

        jLabel3.setText("FECHA NACIMIENTO:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 460, -1, -1));

        jLabel4.setText("APELLIDOS:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 420, -1, -1));

        jLabel5.setText("EDAD:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 340, -1, -1));

        jLabel6.setText("GENERO:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 380, -1, -1));

        jLabel7.setText("DIRECCION:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 420, -1, -1));

        jLabel8.setText("DPI:");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 340, -1, -1));

        CAMBIOS.setText("GUARDAR CAMBIOS");
        CAMBIOS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CAMBIOSActionPerformed(evt);
            }
        });
        getContentPane().add(CAMBIOS, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 460, -1, -1));

        AGREGAR.setText("GUARDAR NUEVO");
        AGREGAR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AGREGARActionPerformed(evt);
            }
        });
        getContentPane().add(AGREGAR, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 290, -1, -1));

        EDITAR2.setText("EDITAR");
        EDITAR2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EDITAR2ActionPerformed(evt);
            }
        });
        getContentPane().add(EDITAR2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 290, -1, -1));

        BORRAR1.setText("BORRAR");
        BORRAR1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BORRAR1ActionPerformed(evt);
            }
        });
        getContentPane().add(BORRAR1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, -1, -1));

        setSize(new java.awt.Dimension(839, 596));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void EDITAR2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EDITAR2ActionPerformed
   
        Tnombre.setEnabled(true);
        Tapellidos.setEnabled(true);
        Tnacimiento.setEnabled(true);
        Tedad.setEnabled(true);
        Tgenero.setEnabled(true);
        Tdireccion.setEnabled(true); 
        Tdpi.setText(String.valueOf(getDpi()));
        Tnombre.setText(getNombre());
        Tapellidos.setText(getApellidos());
        Tnacimiento.setText(getFechaN());
        Tedad.setText(getEdad());
        Tgenero.setText(getGenero());
        Tdireccion.setText(getDireccion());
        
    }//GEN-LAST:event_EDITAR2ActionPerformed

    private void CAMBIOSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CAMBIOSActionPerformed
        conexion conexion = new conexion();
        Connection CONEXION = conexion.connectarmysql();

        try {
            
String SQL = "UPDATE pacientes SET " +
             "nombre = '" + Tnombre.getText() + "', " +
             "apellidos = '" + Tapellidos.getText() + "', " +
             "nacimiento = '" + Tnacimiento.getText() + "', " + 
             "edad = '" + Tedad.getText() + "', " +
             "genero = '" + Tgenero.getText() + "', " +
             "direccion = '" + Tdireccion.getText() + "' " + 
             "WHERE dpi = '" + Tdpi.getText() + "'";
        
            PreparedStatement statement = CONEXION.prepareStatement(SQL);


            int filasInsertadas = statement.executeUpdate(); // Ejecuta el INSERT condicional

            if (filasInsertadas > 0) {
                System.out.println("Insertado: " + filasInsertadas);
                lanzarMensaje("Datos guardados con éxito");
            } else {
                System.out.println("Los datos ya existen en la base de datos, no se insertaron.");
                lanzarMensaje("Los datos ya existen en la base de datos, no se insertaron.");
            }

            CONEXION.close();
            CONEXION = null;
            conexion = null;
        } catch (SQLException ex) {
            Logger.getLogger(Registro.class.getName()).log(Level.SEVERE, null, ex);
            lanzarMensaje("Error al Ingresar datos del Paciente: " + ex.getMessage());
        }
        AcTab();
        Tdpi.setText("");
        Tnombre.setText("");
        Tapellidos.setText("");
        Tnacimiento.setText("");
        Tedad.setText("");
        Tgenero.setText("");
        Tdireccion.setText("");
    }//GEN-LAST:event_CAMBIOSActionPerformed

    private void AGREGARActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AGREGARActionPerformed
        new Registro().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_AGREGARActionPerformed

    private void BORRAR1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BORRAR1ActionPerformed
        String DocBorrar = "";
    
        conexion conexion = new conexion();
        Connection CONEXION = conexion.connectarmysql();

        try {
            // aqui deberia ir el codigo para guardar, actualizar, eliminar o consultar informacion a la BD
            //SE ARMA LA INSTRUCCION SQL PARA BORRAR
            //DocBorrar = Tdpi.getText().replaceAll(" ", "");
            //DocBorrar = DocBorrar.toUpperCase();
            String SQL = "DELETE FROM pacientes WHERE dpi = "+getDpi()+"";

            PreparedStatement statement;

            statement = CONEXION.prepareStatement(SQL); // creamos sentencia
            int filasBorradas = statement.executeUpdate(); // SE EJECUTA EL DELETE
            System.out.println("borrado: " + filasBorradas);//se muestra las filas BORRADAS

            CONEXION.close();//SIEMPRE SE CIERRA LA CONEXION
            CONEXION = null; // SE COLOCA A NULL LA CONEXION PARA QUE EL GC TOME ESTE OBJETO Y LO ELIMINE DE MEMORIA
            conexion = null;

        } catch (SQLException ex) {
            Logger.getLogger(verPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }

        AcTab();
        lanzarMensaje("Datos eliminados correctamente. Paciente con CUI: " + getDpi() + " eliminado");
    }//GEN-LAST:event_BORRAR1ActionPerformed

    public void DatosTabla(){
            TabPacientes.getSelectionModel().addListSelectionListener((ListSelectionEvent e) -> {
    if (!e.getValueIsAdjusting()) {
        int filaSeleccionada = TabPacientes.getSelectedRow();
        if (filaSeleccionada != -1) {
            int columnCount = TabPacientes.getColumnCount(); // Obtén el número de columnas en la tabla

            // Declara variables para cada columna
            setDpi((Double.parseDouble((String) TabPacientes.getValueAt(filaSeleccionada, 0))));
            setNombre((String) TabPacientes.getValueAt(filaSeleccionada, 1));
            setApellidos((String) TabPacientes.getValueAt(filaSeleccionada, 2));
            setFechaN((String) TabPacientes.getValueAt(filaSeleccionada, 3));
            setEdad((String) TabPacientes.getValueAt(filaSeleccionada, 4));
            setGenero((String) TabPacientes.getValueAt(filaSeleccionada, 5));
            setDireccion((String) TabPacientes.getValueAt(filaSeleccionada, 6));
            
            
            // Ahora puedes trabajar con las variables independientes
            System.out.println("Valor de la primera columna: " + getDpi());
            System.out.println("Valor de la segunda columna: " + getNombre());
            
        }
    }           
            
});
    }        
        public void AcTab (){
        ListResgistros.clear();
        //se crea una nueva conexion hacia la BD     
        conexion conexion = new conexion();
        Connection CONEXION = conexion.connectarmysql();

        try {
            // aqui deberia ir el codigo para guardar, actualizar, eliminar o consultar informacion a la BD
            //SE ARMA LA INSTRUCCION SQL PARA CONSULTA

            String SQL = "select * from pacientes";

            Statement statement;

            statement = CONEXION.createStatement(); // creamos sentencia
            ResultSet rs = statement.executeQuery(SQL); // ejecuta consulta

            while (rs.next()) { // se recorre el resultado fila por fila
                datosPacientes datos = new datosPacientes(); // cada vez que se recorre una fila se crea nuevo dto 
                datos.setDpi(rs.getDouble("dpi"));
                datos.setNombre(rs.getString("nombre"));
                datos.setApellidos(rs.getString("apellidos"));
                datos.setFechaN(rs.getString("nacimiento"));
                datos.setEdad(rs.getString("edad"));
                datos.setGenero(rs.getString("genero"));
                datos.setDireccion(rs.getString("direccion"));
                
                ListResgistros.add(datos);

                // miLista.add(datos); // agregamos el dato de cada fila a la lista
            }

            CONEXION.close();//SIEMPRE SE CIERRA LA CONEXION
            CONEXION = null; // SE COLOCA A NULL LA CONEXION PARA QUE EL GC TOME ESTE OBJETO Y LO ELIMINE DE MEMORIA
            conexion = null;

        } catch (SQLException ex) {
            Logger.getLogger(verPacientes.class.getName()).log(Level.SEVERE, null, ex);
        }
        
         // SE CREA MATRIZ DE TAMAÑO DE LISTA, NUMERO DE COLUMNAS
        int numeroFilas = 7;
        if (ListResgistros.size() > 7) {
            numeroFilas = ListResgistros.size();
        }
        String[][] matriz = new String[numeroFilas][7];
//SE USA FOR TRADICIONAL PARA RECORRER LA LISTA   
        for (int i = 0; i < ListResgistros.size(); i++) {
            matriz[i][0] = String.format("%.0f", ListResgistros.get(i).getDpi());
            matriz[i][1] = ListResgistros.get(i).getNombre();
            matriz[i][2] = ListResgistros.get(i).getApellidos();
            matriz[i][3] = ListResgistros.get(i).getFechaN();
            matriz[i][4] = ListResgistros.get(i).getEdad();
            matriz[i][5] = ListResgistros.get(i).getGenero();
            matriz[i][6] = ListResgistros.get(i).getDireccion();
        }

        // SE SETEA MI TABLA PARA MOSTRAR EN PANTALLA   
        TabPacientes.setModel(new javax.swing.table.DefaultTableModel(
                matriz,
                new String[]{
                    "DPI", "NOMBRES", "APELLIDOS", "FECHA NACIMIENTO", 
                    "EDAD", "GENERO", "DIRECCION"   
                }
        ));
//CENTRAMOS LA DATA DEL JTABLE
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment(JLabel.CENTER);

        for (int x = 0; x < 4; x++) {
            TabPacientes.getColumnModel().getColumn(x).setCellRenderer(centerRenderer);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(verPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(verPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(verPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(verPacientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new verPacientes().setVisible(true);
            }
        });
    }
    
                private void lanzarMensaje(String pMensaje) {
        JOptionPane.showMessageDialog(null, pMensaje);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AGREGAR;
    private javax.swing.JButton BORRAR1;
    private javax.swing.JButton CAMBIOS;
    private javax.swing.JButton EDITAR2;
    private javax.swing.JTable TabPacientes;
    private javax.swing.JTextField Tapellidos;
    private javax.swing.JTextField Tdireccion;
    private javax.swing.JTextField Tdpi;
    private javax.swing.JTextField Tedad;
    private javax.swing.JTextField Tgenero;
    private javax.swing.JTextField Tnacimiento;
    private javax.swing.JTextField Tnombre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
